var searchIndex = JSON.parse('{\
"lending_project":{"doc":"","t":"AAAAAAAAIGDMLLLLLLLLLLQQKKLLLLMQKLLMLLLLLLIGQQQKKKQKQQQKKKIGIGQQQKKKQQQKKKQKIGKQNNNIEGNLLLLLLLLLLLQKLLLLLLLLLNGNNNNGNNNDGGNGENIIIIIIINNNNNNNNIGIGIGEIGIGIGIGIGIGGNENNNNNNNNNNNDDDDDNNGNGNDDDKKKKKKKKKKKKKKKKKKKKKKMQKMQKLLLLMMLLLLLLLLLLLLLLKLLLLLLLLLLLLLQMLLLLLLLLLLLLLMLQKLLLLLLLLLLLLLLLMMOMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMQMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQKLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQKKLMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKQMMMMMQKLLLLLLLLLMLLLKQQQKKLKQLLLLLLLQQQQQQQQQKKKLKKKKKKLLLLLLLLLLLLLLLLLLQKLLLLLLLLLLLLLLLLLQQMKMKQQKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQQKKLMQQQQQQQQQQQQQQQQKKKKKKKKKKKKKKKKLLLLLLNNIEGLLLLLLLLLLLLLQKLLLLLLL","n":["traits","abacus_token","block_timestamp_provider","dia_oracle","dummy","flash_loan_receiver","lending_pool","price_feed","AbacusToken","AbacusTokenRef","TransferEventData","amount","borrow","borrow_mut","clone","clone_into","decode","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","default","emitTransferEventAndDecreaseAllowanceOutput","emitTransferEventsOutput","emit_transfer_event_and_decrease_allowance","emit_transfer_events","encode","encode_to","fmt","from","from","getLendingPoolOutput","get_lending_pool","into","size_hint","to","to_keyed_vec","to_owned","try_from","try_into","type_id","type_info","BlockTimestampProviderInterface","BlockTimestampProviderRef","getBlockTimestampOutput","getShouldReturnMockValueOutput","getSpeedMultiplierOutput","get_block_timestamp","get_should_return_mock_value","get_speed_multiplier","increaseBlockTimestampOutput","increase_block_timestamp","setBlockTimestampOutput","setShouldReturnMockValueOutput","setSpeedMultiplierOutput","set_block_timestamp","set_should_return_mock_value","set_speed_multiplier","OracleGetters","OracleGettersRef","OracleSetters","OracleSettersRef","getLatestPriceOutput","getLatestPricesOutput","getUpdaterOutput","get_latest_price","get_latest_prices","get_updater","setPriceOutput","setPricesOutput","setUpdaterOutput","set_price","set_prices","set_updater","transferOwnershipOutput","transfer_ownership","Dummy","DummyRef","dummy","dummyOutput","AssetNotMintable","CantApprove","ExecuteOperationFailed","FlashLoanReceiver","FlashLoanReceiverError","FlashLoanReceiverRef","InsufficientBalance","borrow","borrow_mut","decode","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode","encode_to","eq","equivalent","executeOperationOutput","execute_operation","fmt","from","into","size_hint","to_keyed_vec","try_from","try_into","type_id","type_info","AccessControlError","AccountId","AccumulatedAlready","AlreadyRegistered","AlreadySet","AmountNotGreaterThanZero","AssetId","AssetIsNotProtocolStablecoin","AssetIsProtocolStablecoin","AssetNotRegistered","AssetRules","Balance","Bitmap128","Collaterized","DecimalMultiplier","DefaultEnvironment","DivByZero","EmitBorrowEvents","EmitConfigureEvents","EmitDepositEvents","EmitFlashEvents","EmitLiquidateEvents","EmitMaintainEvents","EmitManageEvents","FlashLoanAmountsAssetsInconsistentLengths","FlashLoanReceiverError","Freezed","Inactive","InsufficientCollateral","InsufficientDebt","InsufficientDeposit","InvalidAssetRule","LendingPoolATokenInterface","LendingPoolATokenInterfaceRef","LendingPoolBorrow","LendingPoolBorrowRef","LendingPoolDeposit","LendingPoolDepositRef","LendingPoolError","LendingPoolFlash","LendingPoolFlashRef","LendingPoolLiquidate","LendingPoolLiquidateRef","LendingPoolMaintain","LendingPoolMaintainRef","LendingPoolManage","LendingPoolManageRef","LendingPoolVTokenInterface","LendingPoolVTokenInterfaceRef","LendingPoolView","LendingPoolViewRef","MarketRule","MarketRuleInvalidId","MathError","MathError","MaxDebtReached","MaxDepositReached","MinimalCollateralDeposit","MinimalDebt","MinimumRecieved","NothingToCompensateWith","NothingToRepay","Overflow","PSP22Error","PriceFeedError","ReserveAbacusTokens","ReserveData","ReserveIndexes","ReserveParameters","ReserveRestrictions","RuleBorrowDisable","RuleCollateralDisable","RuleId","TakingNotACollateral","Timestamp","Underflow","UserConfig","UserReserveData","Vec","_emit_accumulate_interest_event","_emit_accumulate_user_interest_event","_emit_asset_registered_event","_emit_asset_rules_changed_event","_emit_borrow_variable_event","_emit_choose_rule_event","_emit_collateral_set_event","_emit_deposit_event","_emit_flash_loan_event","_emit_flash_loan_fee_e6_changed_event","_emit_income_taken","_emit_liquidation_variable_event","_emit_market_rule_chosen","_emit_price_feed_provider_changed_event","_emit_rebalance_rate_event","_emit_redeem_event","_emit_repay_variable_event","_emit_reserve_activated_event","_emit_reserve_freezed_event","_emit_reserve_parameters_changed_event","_emit_reserve_restrictions_changed_event","_emit_stablecoin_debt_rate_changed","a_token_address","accumulateInterestOutput","accumulate_interest","activated","addMarketRuleOutput","add_market_rule","allocator","and","append","append_or_new","applied_cumulative_debt_index_e18","applied_cumulative_deposit_index_e18","as_bits","as_byte_slice","as_mut","as_mut","as_mut_bits","as_mut_byte_slice","as_mut_ptr","as_mut_slice","as_mut_slice_of","as_ptr","as_ref","as_ref","as_slice","as_slice_of","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrowOutput","borrow_coefficient_e6","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrows","capacity","chooseMarketRuleOutput","choose_market_rule","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collateral_coefficient_e6","collaterals","contract_ref","cumulative_debt_index_e18","cumulative_deposit_index_e18","current_debt_rate_e24","current_deposit_rate_e24","debt","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","decode_with_depth_limit","dedup","dedup_by","dedup_by_key","default","default","default","default","default","deposit","deposit","depositOutput","deposits","deref","deref_mut","deserialize","drain","drop","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode_as_type_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend_from_slice","extend_from_within","extend_one","extend_one","extend_reserve","extend_reserve","extract_if","flashLoanOutput","flash_loan","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freezed","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_raw_parts","from_raw_parts_in","getBlockTimestampProviderAddressOutput","getUserFreeCollateralCoefficientOutput","get_block_timestamp_provider_address","get_user_free_collateral_coefficient","hash","income_for_suppliers_part_e6","index","index_mut","indexes_update_timestamp","insert","interest_rate_model","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_slice","into_deserializer","into_flattened","into_iter","into_iter","into_iter","into_raw_parts","into_raw_parts_with_alloc","into_visitor","is_empty","is_write_vectored","layout","layout","layout","layout","layout","layout","layout","layout","layout","leak","len","len","liquidate","liquidateOutput","market_rule_id","maximal_total_debt","maximal_total_deposit","minimal_collateral","minimal_debt","modifyAssetRuleOutput","modify_asset_rule","ne","ne","ne","ne","ne","ne","new","new_in","partial_cmp","penalty_e6","pop","push","push_within_capacity","redeem","redeemOutput","registerAssetOutput","registerStablecoinOutput","register_asset","register_stablecoin","remove","repay","repayOutput","reserve","reserve_exact","resize","resize_with","retain","retain_mut","serialize","setAsCollateralOutput","setBlockTimestampProviderOutput","setFlashLoanFeeE6Output","setPriceFeedProviderOutput","setReserveIsActiveOutput","setReserveIsFreezedOutput","setReserveParametersOutput","setReserveRestrictionsOutput","setStablecoinDebtRateE24Output","set_as_collateral","set_block_timestamp_provider","set_flash_loan_fee_e6","set_len","set_price_feed_provider","set_reserve_is_active","set_reserve_is_freezed","set_reserve_parameters","set_reserve_restrictions","set_stablecoin_debt_rate_e24","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","spare_capacity_mut","splice","split_at_spare_mut","split_off","swap_remove","takeProtocolIncomeOutput","take_protocol_income","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","totalDebtOfOutput","totalDepositOfOutput","total_debt","total_debt_of","total_deposit","total_deposit_of","transferDebtFromToOutput","transferDepositFromToOutput","transfer_debt_from_to","transfer_deposit_from_to","truncate","try_as_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","userDebtOfOutput","userDepositOfOutput","user_debt_of","user_deposit_of","using_encoded","v_token_address","viewAssetIdOutput","viewFlashLoanFeeE6Output","viewMarketRuleOutput","viewProtocolIncomeOutput","viewRegisteredAssetsOutput","viewReserveDataOutput","viewReserveDecimalMultiplierOutput","viewReserveIndexesOutput","viewReserveParametersOutput","viewReserveRestrictionsOutput","viewReserveTokensOutput","viewUnupdatedReserveDataOutput","viewUnupdatedReserveIndexesOutput","viewUnupdatedUserReserveDataOutput","viewUserConfigOutput","viewUserReserveDataOutput","view_asset_id","view_flash_loan_fee_e6","view_market_rule","view_protocol_income","view_registered_assets","view_reserve_data","view_reserve_decimal_multiplier","view_reserve_indexes","view_reserve_parameters","view_reserve_restrictions","view_reserve_tokens","view_unupdated_reserve_data","view_unupdated_reserve_indexes","view_unupdated_user_reserve_data","view_user_config","view_user_reserve_data","with_capacity","with_capacity_in","write","write","write_all","write_vectored","NoPriceFeed","NoSuchAsset","PriceFeed","PriceFeedError","PriceFeedRef","borrow","borrow_mut","decode","decode","decode_all","decode_all_with_depth_limit","decode_with_depth_limit","encode","encode_to","eq","equivalent","fmt","from","getLatestPricesOutput","get_latest_prices","into","size_hint","to_keyed_vec","try_from","try_into","type_id","type_info"],"q":[[0,"lending_project"],[1,"lending_project::traits"],[8,"lending_project::traits::abacus_token"],[42,"lending_project::traits::block_timestamp_provider"],[58,"lending_project::traits::dia_oracle"],[76,"lending_project::traits::dummy"],[80,"lending_project::traits::flash_loan_receiver"],[109,"lending_project::traits::lending_pool"],[704,"lending_project::traits::price_feed"]],"d":["Interfaces of contracts i.e. interface = traits + errors","a trait that must be additionally implemented for PSP22 …","just for testing","<code>DIA_DATA</code> oracle interface.","dummy trait","a trait that must be implemented by a contract that will …","a trait implemented by core contract of the protocol. It …","the trait implemented that supporst getting prices by the …","","","","","","","","","","","","","","","Output type of the respective trait message.","Output type of the respective trait message.","called whenever the state of user deposit or debt (aToken, …","called by lending protocol whenever the state of user …","","","","Returns the argument unchanged.","","Output type of the respective trait message.","returns lending_pool AccountId","Calls <code>U::from(self)</code>.","","","","","","","","","","","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","","","","Output type of the respective trait message.","","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","","","","","","","","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","","","","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","","","","Output type of the respective trait message.","","","","","Output type of the respective trait message.","","","","","","","","","","","","","","","","","","","Output type of the respective trait message.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Aliases for types of the default environment","returned if the <code>accumulate_interest</code> is called manually on …","returned if asset that is alerady registered is tried to …","returned if activating, disactivating, freezing, …","returned if the <code>amount</code> argument is zero.","type used to identify asset","returned if an operation reserved only to abax stable …","returned if Abax native Stable Tokens AccountId is passed …","returned if an asset that is not registered is passed as …","Defines rules on which asset can be borrowed and used as …","","","returned if one is trying to liquidate collaterized …","","The fundamental types of the default configuration.","","","","","","","","","returned if len of vector of assets that should be …","","returned if reserve is frozen","returned if reserve is inactive","returned if after the action user would become …","returned if one is trying to transfer a debt one doesn’t …","returned if one is trying to transfer a deposit one doesn…","returned if the asset_rule to be set is invalid.","Trait containing messages that are accessible to <strong>AToken</strong> - …","","Trait containing messges that are used by <strong>borrowers</strong>.","","Trait containing messages that are used by <strong>depositors</strong>.","","Possible errors returned by <code>LendingPool</code> messages.","Trait containing flash_loan message. Used by <strong>flash loaners</strong>.","","Trait containing liquidate message. Used by <strong>liquidators</strong>.","","Trait containing messages that are used to maintain …","","Trait containing <code>AccessControl</code> messages used to manage ‘…","","Trait containing messages that are accessible to <strong>VToken</strong> - …","","Trait containing non-mutable messages.","","type used to represent market rule","returned if passed ‘market_rule_id’ that is not used.","","","returned if after the action total debt of an asset is …","returned if after the action total deposit of an asset is …","returned if after the action minimal collaetral restricion …","returned if after the action minimal debt restricion would …","returned if the liquidation would result in not enough …","returned if there is nothing (in an asset) to to …","returned if there is nothing to be repaid (in an asset) …","","","","Stores AccountIds of PSP22(PSP55) contracts that are …","Contains most often used data of a reserve","Stores data used to accumulate deposit and debt interest …","Stores parameters used to calculate <code>current_debt_rate</code> and …","Stores restrictions made on the reserve","returned if one tries to borrow an asset that id not …","returned if one tries to use as colalteral an asset that …","type used to identigy rule","returned if a liquidator tries to take an asset that is …","","","stores information about which asset is deposited, used as …","stores data of user","A contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …","","","","","","","","","","","","","","","","","","","","","","","adress of wrapping deposit aToken","Output type of the respective trait message.","is used by anyone to accumulate deposit and variable rate …","if false deposits, redeems, borrows, repays, liquidate are …","Output type of the respective trait message.","adds new market rule at next martket rule id","Returns a reference to the underlying allocator.","","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","index that is used to accumulate debt interest.","index that is used to accumulate deposit interest.","","","","","","","Returns an unsafe mutable pointer to the vector’s …","Extracts a mutable slice of the entire vector.","","Returns a raw pointer to the vector’s buffer, or a …","","","Extracts a slice containing the entire vector.","","Caller takes <code>amount</code> of an <code>asset</code> as a debt that is …","","","","","","","","","","","","","","Output type of the respective trait message.","used while veryfing collateralization. If None then can …","","","","","","","","","","","","","","active borrow_variable. The order in the Bitmap …","Returns the total number of elements the vector can hold …","Output type of the respective trait message.","Callers choses a market rule caller want to use.","Clears the vector, removing all values.","","","","","","","","","","","","","","","used while veryfing collateralization. If None then can …","turned on collaterals. The order in the Bitmap corresponds …","Generates a wrapper which can be used for interacting with …","","index used to calculate deposit accumulated interest","","current interest rate for deposited tokens per …","underlying asset amount of debt plus accumulated interest.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","","","","","Creates an empty <code>Vec&lt;T&gt;</code>.","Caller make deposits <code>amount</code> of an <code>asset</code> <code>on_behalf_of</code>.","underlying asset amount of deposit plus accumulated …","Output type of the respective trait message.","active user deposits. The order in the Bitmap corresponds …","","","","Removes the specified range from the vector in bulk, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones and appends all elements in a slice to the <code>Vec</code>.","Copies elements from <code>src</code> range to the end of the vector.","","","","","Creates an iterator which uses a closure to determine if …","Output type of the respective trait message.","is used to perform a flash loan. 1) take a loan. 2) …","","","","","","","","","","","","","","if true deposits and borrows are blocked","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Allocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.","Turn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Allocate a <code>Vec&lt;T&gt;</code> and move <code>s</code>’s items into it.","Convert a boxed slice into a vector by transferring …","Converts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","","Convert a clone-on-write slice into a vector.","Converts a <code>CString</code> into a Vec&lt;u8&gt;.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …","Returns the argument unchanged.","","Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a capacity, and …","Creates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a capacity, a …","Output type of the respective trait message.","Output type of the respective trait message.","","","","part of interest paid by borrowers that is redistributed …","","","timestamp of the last update of the rate indexes","Inserts an element at position <code>index</code> within the vector, …","delta interest per millisecond for utilizations (68%, 84%, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the vector into <code>Box&lt;[T]&gt;</code>.","","Takes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.","Creates a consuming iterator, that is, one that moves each …","","","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","","Returns <code>true</code> if the vector contains no elements.","","","","","","","","","","","Consumes and leaks the <code>Vec</code>, returning a mutable reference …","","Returns the number of elements in the vector, also …","is used by a liquidator to liquidate the uncollateralized …","Output type of the respective trait message.","id of market_rule chosen by user","maximal allowad total debt","maximal allowed total deposit","minimal collateral that can be used by each user. if user…","minimal debt that can be taken and maintained by each user.","Output type of the respective trait message.","modifies asset_rules of a given asset in the market rule …","","","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code>.","Constructs a new, empty <code>Vec&lt;T, A&gt;</code>.","","penalty when liquidated, 1e6 == 100%.","Removes the last element from a vector and returns it, or …","Appends an element to the back of a collection.","Appends an element if there is sufficient spare capacity, …","is used by a user0, to redeem on an account of …","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Registers new asset in the <code>LendingPool</code>’s storage and …","Registers new Abax native Stable asset in the <code>LendingPool</code>…","Removes and returns the element at position <code>index</code> within …","Caller repays <code>amount</code> of <code>asset</code> <code>on_behalf_of</code>’s debt. …","Output type of the respective trait message.","Reserves capacity for at least <code>additional</code> more elements to …","Reserves the minimum capacity for at least <code>additional</code> more …","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Caller chooses to <code>use_as_colalteral</code> an <code>asset</code>. i.e. if the …","only for tests sets provider of block_timestamp","Sets a <code>flash_loan_fee_e6</code>","Forces the length of the vector to <code>new_len</code>.","Sets a <code>price_feed_provider</code> - a contract that implements …","activates or disactivates reserve","Freezes or unfreezes reserve","modifies ReserveParameters in the <code>LendingPool</code>’s storage","modifies ReserveRestricion in the <code>LendingPool</code>’s storage","modifies the stablecoin debt rate","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of the vector as much as possible.","","","","","","","","","","","","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of <code>T</code>, along with the …","Splits the collection into two at the given index.","Removes an element from the vector and returns it.","Output type of the respective trait message.","collects income generated by the protocol","","","","","","","","","","","","","","","","","","Output type of the respective trait message.","Output type of the respective trait message.","total debt. It is sum of debts with accumulated interests. …","Returns LendingPool’s total debt of users in the context …","total deposit of underlying asset. It is sum of deposits …","Returns LendingPool’s total deposit of an underlying …","Output type of the respective trait message.","Output type of the respective trait message.","Transfers an <code>amount</code> of  debt on the behalf of <code>from</code> to the …","Transfers an <code>amount</code> of <code>underlying_asset</code> deposit on the …","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve the minimum capacity for at least …","","","","","","","","","","","","","","","","","","","","","","","","","Output type of the respective trait message.","Output type of the respective trait message.","Returns the specified <code>user</code>’s  debt in the context of an …","Returns the specified <code>user</code>’s account Balance of an …","","address of wrapping debt vToken","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","Output type of the respective trait message.","","","","","","","","","","","","","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Output type of the respective trait message.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,93,93,93,93,1,1,1,1,1,93,93,1,1,1,1,1,1,1,1,1,0,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,0,0,0,95,95,95,95,95,95,96,96,96,96,96,96,96,96,0,0,97,97,24,24,24,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,98,98,24,24,24,24,24,24,24,24,24,45,0,45,45,45,45,0,45,45,45,0,0,0,45,0,0,44,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,45,45,45,45,45,45,45,45,44,45,45,0,0,0,0,0,45,45,0,45,0,44,0,0,0,99,99,100,100,101,102,101,103,104,100,100,105,101,100,99,103,101,100,100,100,100,100,40,106,106,49,107,107,10,10,10,10,38,38,10,10,10,10,10,10,10,10,10,10,10,10,10,10,108,37,44,45,38,46,47,39,48,49,40,26,10,10,108,26,37,44,45,38,46,47,39,48,49,40,26,10,10,46,10,108,108,10,37,38,39,40,26,10,10,37,38,39,40,26,10,10,26,46,0,48,48,49,49,38,44,44,45,45,38,38,46,46,47,47,39,39,48,48,49,49,40,40,26,26,10,10,44,45,38,46,47,39,48,49,40,26,10,44,45,38,46,47,39,48,49,40,26,10,44,45,38,46,47,39,48,49,40,26,10,10,10,10,38,46,47,26,10,109,38,109,46,10,10,10,10,10,44,45,38,46,47,39,48,49,40,26,10,10,10,44,45,38,46,47,39,48,49,40,26,10,37,44,45,10,10,10,10,10,10,37,44,45,10,10,10,10,10,10,10,10,10,10,110,110,10,37,44,45,38,46,47,39,48,49,40,26,10,49,37,44,45,45,45,45,45,45,38,46,47,39,48,49,40,26,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,111,111,111,111,10,39,10,10,49,10,39,37,44,45,38,46,47,39,48,49,40,26,10,10,10,10,10,10,10,10,10,10,10,10,38,46,47,39,48,49,40,26,10,10,10,10,112,112,46,47,47,47,47,107,107,10,10,10,10,10,10,10,10,10,26,10,10,10,109,109,107,107,107,107,10,108,108,10,10,10,10,10,10,10,108,107,107,107,107,107,107,107,107,108,107,107,10,107,107,107,107,107,107,10,10,44,45,38,46,47,39,48,49,40,26,10,10,10,10,10,10,107,107,44,45,38,46,47,39,48,49,40,26,10,37,38,39,40,26,10,113,114,49,113,49,114,113,114,113,114,10,10,10,37,44,45,38,46,47,39,48,49,40,26,10,37,44,45,38,46,47,39,48,49,40,26,10,10,10,37,44,45,38,46,47,39,48,49,40,26,10,37,44,45,38,46,47,39,48,49,40,26,10,113,114,113,114,10,40,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,10,10,10,10,10,10,66,66,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,115,115,66,66,66,66,66,66,66],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[2,[[4,[1,3]]]],[2,[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,2],[[4,[3]]]],[[],1],0,0,[[1,8,8,9]],[[[10,[1]]]],[[[0,[11,12]]]],[[1,[0,[11,12]]]],[[1,13],14],[[]],0,0,[[]],[[]],[1,15],0,[[[6,[5]]],[[10,[5,16]]]],[[]],[[],4],[[],4],[[],17],[[],18],0,0,0,0,0,[[]],[[]],[[]],0,[19],0,0,0,[19],[20],[19],0,0,0,0,0,0,0,[21],[[[10,[21]]]],[[]],0,0,0,[[21,22]],[10],[23],0,[23],0,0,[[]],0,0,0,0,0,0,0,0,[[]],[[]],[2,[[4,[24,3]]]],[2,[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,2],[[4,[3]]]],[[[0,[11,12]]]],[[24,[0,[11,12]]]],[[24,24],20],[[],20],0,[[[10,[8]],[10,[22]],[10,[22]],[10,[5]]]],[[24,13],14],[[]],[[]],[24,15],[[[6,[5]]],[[10,[5,16]]]],[[],4],[[],4],[[],17],[[],18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8],[[8,8]],[[8,21,21,5,[25,[5]],[25,[5]],8,8]],[[7,8,26]],[[8,8,8,9]],[[8,19]],[[8,8,20]],[[8,8,8,9]],[[8,8,8,22,22]],[22],[8],[[8,8,8,8,9,9]],[[8,27]],[8],[[8,8]],[[8,8,8,9]],[[8,8,8,9]],[[8,20]],[[8,20]],[[8,[25,[22]],22]],[[8,[28,[9]],[28,[9]],9,9]],[[8,22]],0,0,[8],0,0,[29],[[[10,[30]]],30],[31],[[[10,[30]],[10,[30]]]],[[[10,[5,16]],32],[[4,[[10,[5,16]],3]]]],0,0,[[],[[34,[33]]]],[[],[[6,[5]]]],[[[10,[30]]],[[10,[30]]]],[[[10,[30]]],6],[[],[[34,[33]]]],[[],[[6,[5]]]],[[[10,[30]]]],[[[10,[30]]],6],[[],[[4,[[6,[35]],36]]]],[[[10,[30]]]],[[[10,[30]]],6],[[[10,[30]]],[[10,[30]]]],[[[10,[30]]],6],[[],[[4,[[6,[35]],36]]]],[[8,8,9,[10,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[30]]],6],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[30]]],6],0,[[[10,[30]]],15],0,[27],[[[10,[30]]]],[37,37],[38,38],[39,39],[40,40],[26,26],[[[10,[41,[0,[30,41]]]]],[[10,[41,[0,[30,41]]]]]],[[[10,[41,[0,[30,41]]]],[10,[41,[0,[30,41]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[42,30]],[10,[42,30]]],43],0,0,0,0,0,0,0,0,[2,[[4,[44,3]]]],[2,[[4,[3]]]],[2,[[4,[45,3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[38,3]]]],[2,[[4,[3]]]],[2,[[4,[46,3]]]],[2,[[4,[47,3]]]],[2,[[4,[3]]]],[2,[[4,[39,3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[48,3]]]],[2,[[4,[3]]]],[2,[[4,[49,3]]]],[2,[[4,[40,3]]]],[2,[[4,[3]]]],[2,[[4,[3]]]],[2,[[4,[26,3]]]],[2,[[4,[3]]]],[2,[[4,[[10,[50,16]],3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[7,2],[[4,[3]]]],[[[10,[[51,[[51,[[51,[51]]]]]],30]]]],[[[10,[30]],52]],[[[10,[30]],52]],[[],38],[[],46],[[],47],[[],26],[[],[[10,[16]]]],[[8,8,9,[10,[5]]]],0,0,0,[[[10,[30]]],6],[[[10,[30]]],6],[53,[[4,[[10,[54,16]]]]]],[[[10,[30]],[55,[15]]],[[56,[30]]]],[[[10,[30]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[[0,[11,12]]]],[[],[[10,[5,16]]]],[[[0,[11,12]]]],[[[10,[57,16]],7,58,[10,[5,16]]],[[4,[59]]]],[[44,[0,[11,12]]]],[[45,[0,[11,12]]]],[[38,[0,[11,12]]]],[[46,[0,[11,12]]]],[[47,[0,[11,12]]]],[[39,[0,[11,12]]]],[[48,[0,[11,12]]]],[[49,[0,[11,12]]]],[[40,[0,[11,12]]]],[[26,[0,[11,12]]]],[[[0,[11,12]]]],[[37,37],20],[[44,44],20],[[45,45],20],[[[10,[51,30]],25],20],[[[10,[51,30]],6],20],[[[10,[51,30]],6],20],[[[10,[51,30]],6],20],[[[10,[51,30]],[10,[30]]],20],[[[10,[51,30]],25],20],[[],20],[[],20],[[],20],[[],20],[[[10,[30]],32]],[[[10,[60,30]],32]],[[[10,[41,30]],[6,[41]]]],[[[10,[41,30]],[55,[15]]]],[[[10,[60,30]],60]],[[[10,[30]]]],[[[10,[60,30]],15]],[[[10,[30]],15]],[[[10,[30]],52],[[61,[52,30]]]],0,[[8,[10,[8]],[10,[9]],[10,[5]]]],[[[10,[5,30]]],[[4,[62]]]],[[37,13],[[4,[63]]]],[[44,13],14],[[45,13],14],[[38,13],14],[[46,13],14],[[47,13],14],[[39,13],14],[[48,13],14],[[49,13],14],[[40,13],14],[[26,13],14],[[[10,[64,30]],13],[[4,[63]]]],0,[[]],[[]],[44,45],[24,45],[65,45],[[]],[66,45],[67,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,[[10,[5,16]]]],[[[69,[30]]],[[10,[30]]]],[[[6,[41]]],[[10,[41,16]]]],[25,[[10,[16]]]],[[[70,[6,30]]],[[10,[30]]]],[[[71,[30]]],[[10,[30]]]],[[[73,[72,33]]],[[10,[72,16]]]],[[[74,[6]]],[[10,[16]]]],[75,[[10,[5,16]]]],[[[6,[41]]],[[10,[41,16]]]],[21,[[10,[5,16]]]],[[]],[32,[[10,[16]]]],[[15,15],[[10,[16]]]],[[15,15,30],[[10,[30]]]],0,0,[[]],[8],[[[10,[76,30]],77]],0,[[[10,[30]],[78,[6]]]],[[[10,[30]],[78,[6]]]],0,[[[10,[30]],15]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[30]]],[[70,[6,30]]]],[[[10,[[80,[79]],16]]]],[[[10,[25,30]]],[[10,[30]]]],[[[10,[30]]]],[[[10,[30]]]],[[[10,[30]]]],[[[10,[30]]]],[[[10,[30]]]],[[]],[[[10,[30]]],20],[[[10,[5,30]]],20],[81,82],[81,82],[81,82],[81,82],[81,82],[81,82],[81,82],[81,82],[7,[[82,[83]]]],[[[10,[30]]],6],[[[6,[5]]],[[4,[15,3]]]],[[[10,[30]]],15],[[8,8,8,9,22,[10,[5]]]],0,0,0,0,0,0,0,[[27,8,26]],[[[10,[51,30]],6],20],[[[10,[51,30]],[10,[30]]],20],[[[10,[51,30]],25],20],[[[10,[51,30]],6],20],[[[10,[51,30]],6],20],[[[10,[51,30]],25],20],[[],[[10,[16]]]],[30,[[10,[30]]]],[[[10,[[84,[[84,[[84,[84]]]]]],30]],[10,[[84,[[84,[[84,[84]]]]]],30]]],[[28,[43]]]],0,[[[10,[30]]],28],[[[10,[30]]]],[[[10,[30]]],4],[[8,8,9,[10,[5]]]],0,0,0,[[8,[25,[5]],[25,[5]],21,21,5,26,[28,[9]],[28,[9]],9,9,22,[25,[22]]]],[[8,[25,[5]],[25,[5]],21,21,5,26,[28,[9]],[28,[9]],9,9]],[[[10,[30]],15]],[[8,8,9,[10,[5]]]],0,[[[10,[30]],15]],[[[10,[30]],15]],[[[10,[41,30]],15,41]],[[[10,[30]],15,52]],[[[10,[30]],52]],[[[10,[30]],52]],[[[10,[85,16]],86],4],0,0,0,0,0,0,0,0,0,[[8,20]],[8],[22],[[[10,[30]],15]],[8],[[8,20]],[[8,20]],[[8,[25,[22]],22]],[[8,[28,[9]],[28,[9]],9,9]],[[8,22]],[[[10,[30]],15]],[[[10,[30]]]],[44,15],[45,15],[38,15],[46,15],[47,15],[39,15],[48,15],[49,15],[40,15],[26,15],[[],15],[[[10,[30]]],[[6,[87]]]],[[[10,[30]],[55,[15]],32],[[88,[30]]]],[[[10,[30]]]],[[[10,[41,30]],15],[[10,[41,30]]]],[[[10,[30]],15]],0,[[[28,[[10,[8]]]],8]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[[6,[5]]],[[10,[5,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[8],0,[8],0,0,[[8,8,8,9]],[[8,8,8,9]],[[[10,[30]],15]],[[],[[4,[[34,[33]],89]]]],[[],[[4,[[34,[33]],89]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[10,[30]],15],[[4,[90]]]],[[[10,[30]],15],[[4,[90]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],[[18,[83]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],[[18,[83]]]],0,0,[[8,8]],[[8,8]],[91],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8],[[]],[27],[[[28,[[10,[8]]]]]],[[]],[8],[8],[8],[8],[8],[8],[8],[8],[[8,8]],[8],[[8,8]],[15,[[10,[16]]]],[[15,30],[[10,[30]]]],[[[10,[5,30]],[6,[5]]],[[4,[15,62]]]],[[[6,[5]]]],[[[10,[5,30]],[6,[5]]],[[4,[62]]]],[[[10,[5,30]],[6,[92]]],[[4,[15,62]]]],0,0,0,0,0,[[]],[[]],[2,[[4,[66,3]]]],[2,[[4,[3]]]],[[[6,[5]]],[[4,[3]]]],[[7,[6,[5]]],[[4,[3]]]],[[7,2],[[4,[3]]]],[[[0,[11,12]]]],[[66,[0,[11,12]]]],[[66,66],20],[[],20],[[66,13],14],[[]],0,[[[10,[23]]]],[[]],[66,15],[[[6,[5]]],[[10,[5,16]]]],[[],4],[[],4],[[],17],[[],18]],"c":[],"p":[[3,"TransferEventData"],[8,"Input"],[3,"Error"],[4,"Result"],[15,"u8"],[15,"slice"],[15,"u32"],[6,"AccountId"],[6,"Balance"],[3,"Vec"],[8,"Output"],[8,"Sized"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"Global"],[3,"TypeId"],[3,"Type"],[15,"u64"],[15,"bool"],[3,"String"],[15,"u128"],[3,"AccountId"],[4,"FlashLoanReceiverError"],[15,"array"],[3,"AssetRules"],[6,"RuleId"],[4,"Option"],[6,"MarketRule"],[8,"Allocator"],[8,"Codec"],[8,"IntoIterator"],[8,"BitOrder"],[3,"BitSlice"],[8,"FromByteSlice"],[4,"Error"],[4,"DefaultEnvironment"],[3,"UserReserveData"],[3,"ReserveParameters"],[3,"ReserveAbacusTokens"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[4,"MathError"],[4,"LendingPoolError"],[3,"UserConfig"],[3,"ReserveRestrictions"],[3,"ReserveIndexes"],[3,"ReserveData"],[8,"Decode"],[8,"PartialEq"],[8,"FnMut"],[8,"Deserializer"],[8,"Deserialize"],[8,"RangeBounds"],[3,"Drain"],[8,"EncodeAsType"],[3,"PortableRegistry"],[3,"Error"],[8,"Copy"],[3,"ExtractIf"],[3,"Error"],[3,"Error"],[8,"Debug"],[4,"PSP22Error"],[4,"PriceFeedError"],[4,"AccessControlError"],[15,"str"],[3,"VecDeque"],[3,"Box"],[3,"BinaryHeap"],[8,"BitStore"],[3,"BitVec"],[4,"Cow"],[3,"CString"],[8,"Hash"],[8,"Hasher"],[8,"SliceIndex"],[8,"Error"],[8,"IntoDeserializer"],[6,"Key"],[4,"Layout"],[4,"MetaForm"],[8,"PartialOrd"],[8,"Serialize"],[8,"Serializer"],[19,"MaybeUninit"],[3,"Splice"],[4,"BitSpanError"],[3,"TryReserveError"],[8,"FnOnce"],[3,"IoSlice"],[8,"AbacusToken"],[8,"BlockTimestampProviderInterface"],[8,"OracleGetters"],[8,"OracleSetters"],[8,"Dummy"],[8,"FlashLoanReceiver"],[8,"EmitMaintainEvents"],[8,"EmitManageEvents"],[8,"EmitBorrowEvents"],[8,"EmitConfigureEvents"],[8,"EmitDepositEvents"],[8,"EmitFlashEvents"],[8,"EmitLiquidateEvents"],[8,"LendingPoolMaintain"],[8,"LendingPoolManage"],[8,"LendingPoolBorrow"],[8,"LendingPoolDeposit"],[8,"LendingPoolFlash"],[8,"LendingPoolView"],[8,"LendingPoolLiquidate"],[8,"LendingPoolVTokenInterface"],[8,"LendingPoolATokenInterface"],[8,"PriceFeed"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
